name: {{cookiecutter.project_name}} API

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:{{cookiecutter.postgresql_version}}
        env:
          POSTGRES_DB: db_test
          POSTGRES_PASSWORD: db_test_pwd_ci
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: {% if cookiecutter.python_version == '3.8.10' -%}3.8{%- else %}3.9{%- endif %}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt

      - name: Python Linter
        run: pylint {{cookiecutter.project_slug}}/**/*.py

      - name: Rodar migrations
        run: flask db upgrade
        env:
          FLASK_APP: {{cookiecutter.project_slug}}.app
          FLASK_ENV: development
          DATABASE_URI: postgresql://postgres:db_test_pwd_ci@localhost:5432/db_test

      - name: Tests
        run: pytest --cache-clear
        env:
          FLASK_APP: {{cookiecutter.project_slug}}.app
          FLASK_ENV: development
          DATABASE_URI: postgresql://postgres:db_test_pwd_ci@localhost:5432/db_test

{%- if cookiecutter.use_dockerfile == 'yes' %}
      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v1

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: {% raw %}${{ github.repository_owner }}{% endraw %}
          password: {% raw %}${{ secrets.CR_PAT }}{% endraw %}

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Extract commit sha
        shell: bash
        run: echo "##[set-output name=github_sha;]$(echo ${GITHUB_REF#refs/heads/}.${GITHUB_SHA})"
        id: extract_sha

      # Push to Github Container Registry
      - name: Push to Github Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          version: {% raw %}${{ steps.extract_branch.outputs.branch }}{% endraw %}
          file: Dockerfile
          target: production
          push: true
          build-args: {% raw %}GIT_HASH=${{ steps.extract_sha.outputs.github_sha }}{% endraw %}
          tags: {% raw %}"ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}"{% endraw %}
{%- endif %}
